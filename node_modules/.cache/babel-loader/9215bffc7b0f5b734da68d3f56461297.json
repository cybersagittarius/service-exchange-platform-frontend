{"ast":null,"code":"var _jsxFileName = \"/home/dci/Documents/FbW39/exchange-on-github/service-exchange-platform-frontend/src/Components/userAccount/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport LoginForm from \"./forms/LoginForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [passWord, setPassWord] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(false);\n  const [alertEM, setAlertEM] = useState(false);\n  const [alertPW, setAlertPW] = useState(false);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const emailValidator = /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,15}$/;\n    const isEmValid = emailValidator.test(email);\n\n    if (!isEmValid) {\n      setAlertEM(true);\n      setTimeout(() => {\n        setAlertEM(false);\n      }, 5000);\n      return false;\n    }\n\n    const pwValidator = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@$!%*?&])([a-zA-Z0-9@$!%*?&]{8,12})$/;\n    const isPwValid = pwValidator.test(passWord);\n\n    if (!isPwValid) {\n      setAlertPW(true);\n      setTimeout(() => {\n        setAlertPW(false);\n      }, 5000);\n      return false;\n    }\n\n    rememberMe === true ? saveOnLocal(email, passWord) : console.log(\"No email nor password saved in the browser\");\n    setEmail(\"\");\n    setPassWord(\"\");\n    setRememberMe(false);\n  };\n\n  const saveOnLocal = (email, passWord) => {\n    let data = JSON.parse(localStorage.getItem(\"user\"));\n\n    if (data == null) {\n      data = {\n        email,\n        passWord\n      };\n    } else {\n      data.email = email;\n      data.passWord = passWord;\n    }\n\n    localStorage.setItem(\"user\", JSON.stringify(data));\n    console.log(data);\n  }; //set change handlers at the parent level\n\n\n  const changeEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  const changePW = e => {\n    setPassWord(e.target.value);\n  };\n\n  const changeRM = e => {\n    setRememberMe(e.target.checked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(LoginForm, {\n      submitHandler: submitHandler,\n      changeEmail: changeEmail,\n      changePW: changePW,\n      changeRM: changeRM,\n      email: email,\n      passWord: passWord,\n      rememberMe: rememberMe,\n      alertEM: alertEM,\n      alertPW: alertPW\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Login, \"er2jdByUAgoRFZl37yefMBsDUzk=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/dci/Documents/FbW39/exchange-on-github/service-exchange-platform-frontend/src/Components/userAccount/Login.jsx"],"names":["useState","LoginForm","Login","email","setEmail","passWord","setPassWord","rememberMe","setRememberMe","alertEM","setAlertEM","alertPW","setAlertPW","submitHandler","e","preventDefault","emailValidator","isEmValid","test","setTimeout","pwValidator","isPwValid","saveOnLocal","console","log","data","JSON","parse","localStorage","getItem","setItem","stringify","changeEmail","target","value","changePW","changeRM","checked"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport LoginForm from \"./forms/LoginForm\";\n\nconst Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const [passWord, setPassWord] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(false);\n  const [alertEM, setAlertEM] = useState(false);\n  const [alertPW, setAlertPW] = useState(false);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const emailValidator = /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,15}$/;\n    const isEmValid = emailValidator.test(email);\n\n    if (!isEmValid) {\n      setAlertEM(true);\n      setTimeout(() => {\n        setAlertEM(false);\n      }, 5000);\n      return false;\n    }\n\n    const pwValidator = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@$!%*?&])([a-zA-Z0-9@$!%*?&]{8,12})$/;\n    const isPwValid = pwValidator.test(passWord);\n\n    if (!isPwValid) {\n      setAlertPW(true);\n      setTimeout(() => {\n        setAlertPW(false);\n      }, 5000);\n      return false;\n    }\n\n    rememberMe === true\n      ? saveOnLocal(email, passWord)\n      : console.log(\"No email nor password saved in the browser\");\n\n    setEmail(\"\");\n    setPassWord(\"\");\n    setRememberMe(false);\n  };\n\n  const saveOnLocal = (email, passWord) => {\n    let data = JSON.parse(localStorage.getItem(\"user\"));\n\n    if (data == null) {\n      data = { email, passWord };\n    } else {\n      data.email = email;\n      data.passWord = passWord;\n    }\n\n    localStorage.setItem(\"user\", JSON.stringify(data));\n    console.log(data);\n  };\n\n  //set change handlers at the parent level\n  const changeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const changePW = (e) => {\n    setPassWord(e.target.value);\n  };\n\n  const changeRM = (e) => {\n    setRememberMe(e.target.checked);\n  };\n\n  return (\n    <>\n      <LoginForm\n        submitHandler={submitHandler}\n        changeEmail={changeEmail}\n        changePW={changePW}\n        changeRM={changeRM}\n        email={email}\n        passWord={passWord}\n        rememberMe={rememberMe}\n        alertEM={alertEM}\n        alertPW={alertPW}\n      />\n    </>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}